///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace WakeApp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddDeviceAndroid recording.
    /// </summary>
    [TestModule("fa8e3e22-3bc7-4632-8101-b28af362caa0", ModuleType.Recording, 1)]
    public partial class AddDeviceAndroid : ITestModule
    {
        /// <summary>
        /// Holds an instance of the WakeAppRepository repository.
        /// </summary>
        public static WakeAppRepository repo = WakeAppRepository.Instance;

        static AddDeviceAndroid instance = new AddDeviceAndroid();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddDeviceAndroid()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddDeviceAndroid Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.AlarmActivity.BtnBack' at Center", repo.MExampleWakeapp2.AlarmActivity.BtnBackInfo, new RecordItemIndex(0));
            repo.MExampleWakeapp2.AlarmActivity.BtnBack.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.AlarmActivity.BtnBack' at Center", repo.MExampleWakeapp2.AlarmActivity.BtnBackInfo, new RecordItemIndex(1));
            repo.MExampleWakeapp2.AlarmActivity.BtnBack.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.Linear2.BtnDiviceMgmt' at Center", repo.MExampleWakeapp2.Linear2.BtnDiviceMgmtInfo, new RecordItemIndex(2));
            repo.MExampleWakeapp2.Linear2.BtnDiviceMgmt.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'MExampleWakeapp2.Relative1'.", repo.MExampleWakeapp2.Relative1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.MExampleWakeapp2.Relative1Info, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'MExampleWakeapp2.Relative1'.", repo.MExampleWakeapp2.Relative1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MExampleWakeapp2.Relative1Info, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.BtnAddNewDevice' at Center", repo.MExampleWakeapp2.BtnAddNewDeviceInfo, new RecordItemIndex(5));
            repo.MExampleWakeapp2.BtnAddNewDevice.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Nowe urządzenie') on item 'MExampleWakeapp2.Relative2.TvTitle'.", repo.MExampleWakeapp2.Relative2.TvTitleInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MExampleWakeapp2.Relative2.TvTitleInfo, "Text", "Nowe urządzenie");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Telefon') on item 'MExampleWakeapp2.Relative2.RadioTelefon'.", repo.MExampleWakeapp2.Relative2.RadioTelefonInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.MExampleWakeapp2.Relative2.RadioTelefonInfo, "Text", "Telefon");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Budzik WakeApp Arduino') on item 'MExampleWakeapp2.Relative2.RadioArduino'.", repo.MExampleWakeapp2.Relative2.RadioArduinoInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MExampleWakeapp2.Relative2.RadioArduinoInfo, "Text", "Budzik WakeApp Arduino");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Dodaj') on item 'MExampleWakeapp2.Relative2.BtnDodajDevice'.", repo.MExampleWakeapp2.Relative2.BtnDodajDeviceInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MExampleWakeapp2.Relative2.BtnDodajDeviceInfo, "Text", "Dodaj");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.Relative2.EtDeviceName' at Center", repo.MExampleWakeapp2.Relative2.EtDeviceNameInfo, new RecordItemIndex(10));
            repo.MExampleWakeapp2.Relative2.EtDeviceName.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to 'PhoneTest' on item 'MExampleWakeapp2.Relative2.EtDeviceName'.", repo.MExampleWakeapp2.Relative2.EtDeviceNameInfo, new RecordItemIndex(11));
            repo.MExampleWakeapp2.Relative2.EtDeviceName.Element.SetAttributeValue("Text", "PhoneTest");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.Relative2.EtDeviceMAC' at Center", repo.MExampleWakeapp2.Relative2.EtDeviceMACInfo, new RecordItemIndex(12));
            repo.MExampleWakeapp2.Relative2.EtDeviceMAC.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '792215483' on item 'MExampleWakeapp2.Relative2.EtDeviceMAC'.", repo.MExampleWakeapp2.Relative2.EtDeviceMACInfo, new RecordItemIndex(13));
            repo.MExampleWakeapp2.Relative2.EtDeviceMAC.Element.SetAttributeValue("Text", "792215483");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.Relative2.Text1' at Center", repo.MExampleWakeapp2.Relative2.Text1Info, new RecordItemIndex(14));
            repo.MExampleWakeapp2.Relative2.Text1.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.Relative2.BtnDodajDevice' at Center", repo.MExampleWakeapp2.Relative2.BtnDodajDeviceInfo, new RecordItemIndex(15));
            repo.MExampleWakeapp2.Relative2.BtnDodajDevice.Touch();
            Delay.Milliseconds(500);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace WakeApp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AndroidPhoneAlarmSetup recording.
    /// </summary>
    [TestModule("d5d3d7a2-d2c1-4d9a-83ea-4b4244ff98f7", ModuleType.Recording, 1)]
    public partial class AndroidPhoneAlarmSetup : ITestModule
    {
        /// <summary>
        /// Holds an instance of the WakeAppRepository repository.
        /// </summary>
        public static WakeAppRepository repo = WakeAppRepository.Instance;

        static AndroidPhoneAlarmSetup instance = new AndroidPhoneAlarmSetup();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AndroidPhoneAlarmSetup()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AndroidPhoneAlarmSetup Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.Linear2.BtnAlarmMgmt' at Center", repo.MExampleWakeapp2.Linear2.BtnAlarmMgmtInfo, new RecordItemIndex(0));
            repo.MExampleWakeapp2.Linear2.BtnAlarmMgmt.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'MExampleWakeapp2.Relative1'.", repo.MExampleWakeapp2.Relative1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MExampleWakeapp2.Relative1Info, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'MExampleWakeapp2.AlarmActivity.BtnAddNewAlarm' at Center", repo.MExampleWakeapp2.AlarmActivity.BtnAddNewAlarmInfo, new RecordItemIndex(2));
            repo.MExampleWakeapp2.AlarmActivity.BtnAddNewAlarm.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Dodaj alarm') on item 'MExampleWakeapp2.AlarmActivity.TvTitle'.", repo.MExampleWakeapp2.AlarmActivity.TvTitleInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.MExampleWakeapp2.AlarmActivity.TvTitleInfo, "Text", "Dodaj alarm");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Powtarzaj alarm') on item 'MExampleWakeapp2.AlarmActivity.Switch1'.", repo.MExampleWakeapp2.AlarmActivity.Switch1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MExampleWakeapp2.AlarmActivity.Switch1Info, "Text", "Powtarzaj alarm");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'MExampleWakeapp2.AlarmActivity.TextView3'.", repo.MExampleWakeapp2.AlarmActivity.TextView3Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MExampleWakeapp2.AlarmActivity.TextView3Info, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'MExampleWakeapp2.AlarmActivity.BtnDodajAlarm'.", repo.MExampleWakeapp2.AlarmActivity.BtnDodajAlarmInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MExampleWakeapp2.AlarmActivity.BtnDodajAlarmInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

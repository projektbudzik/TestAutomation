///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace WakeApp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The HappyPathForContactForm recording.
    /// </summary>
    [TestModule("6d63139b-f39e-400e-be2d-c176591c3f40", ModuleType.Recording, 1)]
    public partial class HappyPathForContactForm : ITestModule
    {
        /// <summary>
        /// Holds an instance of the WakeAppRepository repository.
        /// </summary>
        public static WakeAppRepository repo = WakeAppRepository.Instance;

        static HappyPathForContactForm instance = new HappyPathForContactForm();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public HappyPathForContactForm()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static HappyPathForContactForm Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://www.projektbudzik.pl/Contact?' with browser 'Chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("http://www.projektbudzik.pl/Contact?", "Chrome", "", false, false, false, true, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(1));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.Name' at 154;28.", repo.WelcomeWakeApp.NameInfo, new RecordItemIndex(2));
            repo.WelcomeWakeApp.Name.Click("154;28");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'test' with focus on 'WelcomeWakeApp.Name'.", repo.WelcomeWakeApp.NameInfo, new RecordItemIndex(3));
            repo.WelcomeWakeApp.Name.PressKeys("test");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.Email' at 129;10.", repo.WelcomeWakeApp.EmailInfo, new RecordItemIndex(4));
            repo.WelcomeWakeApp.Email.Click("129;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'contact{RShiftKey down}@{RShiftKey up}ok.pl' with focus on 'WelcomeWakeApp.Email'.", repo.WelcomeWakeApp.EmailInfo, new RecordItemIndex(5));
            repo.WelcomeWakeApp.Email.PressKeys("contact{RShiftKey down}@{RShiftKey up}ok.pl");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.Phone' at 103;30.", repo.WelcomeWakeApp.PhoneInfo, new RecordItemIndex(6));
            repo.WelcomeWakeApp.Phone.Click("103;30");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '3434' with focus on 'WelcomeWakeApp.Phone'.", repo.WelcomeWakeApp.PhoneInfo, new RecordItemIndex(7));
            repo.WelcomeWakeApp.Phone.PressKeys("3434");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.Subject' at 67;24.", repo.WelcomeWakeApp.SubjectInfo, new RecordItemIndex(8));
            repo.WelcomeWakeApp.Subject.Click("67;24");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'subject' with focus on 'WelcomeWakeApp.Subject'.", repo.WelcomeWakeApp.SubjectInfo, new RecordItemIndex(9));
            repo.WelcomeWakeApp.Subject.PressKeys("subject");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.Message' at 79;52.", repo.WelcomeWakeApp.MessageInfo, new RecordItemIndex(10));
            repo.WelcomeWakeApp.Message.Click("79;52");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'test subject' with focus on 'WelcomeWakeApp.Message'.", repo.WelcomeWakeApp.MessageInfo, new RecordItemIndex(11));
            repo.WelcomeWakeApp.Message.PressKeys("test subject");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.DivTagRow.Wyślij' at 34;22.", repo.WelcomeWakeApp.DivTagRow.WyślijInfo, new RecordItemIndex(12));
            repo.WelcomeWakeApp.DivTagRow.Wyślij.Click("34;22");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(13));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Dziękujemy za kontakt. Odpiszemy najszybciej jak to będzie możliwe.') on item 'WelcomeWakeApp.DziękujemyZaKontaktOdpiszemyNajszyb'.", repo.WelcomeWakeApp.DziękujemyZaKontaktOdpiszemyNajszybInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.WelcomeWakeApp.DziękujemyZaKontaktOdpiszemyNajszybInfo, "InnerText", "Dziękujemy za kontakt. Odpiszemy najszybciej jak to będzie możliwe.");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Application", "Killing application containing item 'WelcomeWakeApp'.", repo.WelcomeWakeApp.SelfInfo, new RecordItemIndex(15));
            Host.Current.KillApplication(repo.WelcomeWakeApp.Self);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

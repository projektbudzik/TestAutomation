///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace WakeApp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The RegisterAlreadyUserCredentials recording.
    /// </summary>
    [TestModule("d0d5d5b0-8b21-47d1-b315-16ff446301c6", ModuleType.Recording, 1)]
    public partial class RegisterAlreadyUserCredentials : ITestModule
    {
        /// <summary>
        /// Holds an instance of the WakeAppRepository repository.
        /// </summary>
        public static WakeAppRepository repo = WakeAppRepository.Instance;

        static RegisterAlreadyUserCredentials instance = new RegisterAlreadyUserCredentials();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public RegisterAlreadyUserCredentials()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static RegisterAlreadyUserCredentials Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://www.projektbudzik.pl/Account/Register?' with browser 'Chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("http://www.projektbudzik.pl/Account/Register?", "Chrome", "", false, false, false, true, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.Name' at 126;21.", repo.WelcomeWakeApp.NameInfo, new RecordItemIndex(1));
            repo.WelcomeWakeApp.Name.Click("126;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'tomasz' with focus on 'WelcomeWakeApp.Name'.", repo.WelcomeWakeApp.NameInfo, new RecordItemIndex(2));
            repo.WelcomeWakeApp.Name.PressKeys("tomasz");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.Email' at 93;10.", repo.WelcomeWakeApp.EmailInfo, new RecordItemIndex(3));
            repo.WelcomeWakeApp.Email.Click("93;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'tomasz.faldrowicz{RShiftKey down}@{RShiftKey up}gmail.com' with focus on 'WelcomeWakeApp.Email'.", repo.WelcomeWakeApp.EmailInfo, new RecordItemIndex(4));
            repo.WelcomeWakeApp.Email.PressKeys("tomasz.faldrowicz{RShiftKey down}@{RShiftKey up}gmail.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.Password' at 107;17.", repo.WelcomeWakeApp.PasswordInfo, new RecordItemIndex(5));
            repo.WelcomeWakeApp.Password.Click("107;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'haslo' with focus on 'WelcomeWakeApp.Password'.", repo.WelcomeWakeApp.PasswordInfo, new RecordItemIndex(6));
            repo.WelcomeWakeApp.Password.PressKeys("haslo");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.ConfirmPassword' at 85;11.", repo.WelcomeWakeApp.ConfirmPasswordInfo, new RecordItemIndex(7));
            repo.WelcomeWakeApp.ConfirmPassword.Click("85;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'haslo' with focus on 'WelcomeWakeApp.ConfirmPassword'.", repo.WelcomeWakeApp.ConfirmPasswordInfo, new RecordItemIndex(8));
            repo.WelcomeWakeApp.ConfirmPassword.PressKeys("haslo");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.DivTagRow.FormCheck' at 14;15.", repo.WelcomeWakeApp.DivTagRow.FormCheckInfo, new RecordItemIndex(9));
            repo.WelcomeWakeApp.DivTagRow.FormCheck.Click("14;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.LabelTagCreateNewGroup' at 49;12.", repo.WelcomeWakeApp.LabelTagCreateNewGroupInfo, new RecordItemIndex(10));
            repo.WelcomeWakeApp.LabelTagCreateNewGroup.Click("49;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.GroupName' at 63;9.", repo.WelcomeWakeApp.GroupNameInfo, new RecordItemIndex(11));
            repo.WelcomeWakeApp.GroupName.Click("63;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'grupa' with focus on 'WelcomeWakeApp.GroupName'.", repo.WelcomeWakeApp.GroupNameInfo, new RecordItemIndex(12));
            repo.WelcomeWakeApp.GroupName.PressKeys("grupa");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.GroupPassword' at 93;21.", repo.WelcomeWakeApp.GroupPasswordInfo, new RecordItemIndex(13));
            repo.WelcomeWakeApp.GroupPassword.Click("93;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'haslo' with focus on 'WelcomeWakeApp.GroupPassword'.", repo.WelcomeWakeApp.GroupPasswordInfo, new RecordItemIndex(14));
            repo.WelcomeWakeApp.GroupPassword.PressKeys("haslo");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.GroupConfirmPassword' at 90;9.", repo.WelcomeWakeApp.GroupConfirmPasswordInfo, new RecordItemIndex(15));
            repo.WelcomeWakeApp.GroupConfirmPassword.Click("90;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'haslo' with focus on 'WelcomeWakeApp.GroupConfirmPassword'.", repo.WelcomeWakeApp.GroupConfirmPasswordInfo, new RecordItemIndex(16));
            repo.WelcomeWakeApp.GroupConfirmPassword.PressKeys("haslo");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeWakeApp.Submit1' at 73;28.", repo.WelcomeWakeApp.Submit1Info, new RecordItemIndex(17));
            repo.WelcomeWakeApp.Submit1.Click("73;28");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Podany adres email już istnieje') on item 'WelcomeWakeApp.DivTagRow.PodanyAdresEmailJużIstnieje'.", repo.WelcomeWakeApp.DivTagRow.PodanyAdresEmailJużIstniejeInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.WelcomeWakeApp.DivTagRow.PodanyAdresEmailJużIstniejeInfo, "InnerText", "Podany adres email już istnieje");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'WelcomeWakeApp'.", repo.WelcomeWakeApp.SelfInfo, new RecordItemIndex(19));
            Host.Current.CloseApplication(repo.WelcomeWakeApp.Self, 100);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
